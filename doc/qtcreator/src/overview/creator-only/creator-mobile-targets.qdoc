// Copyright (C) 2022 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

// **********************************************************************
// NOTE: the sections are not ordered by their logical order to avoid
// reshuffling the file each time the index order changes (i.e., often).
// Run the fixnavi.pl script to adjust the links to the index order.
// **********************************************************************

/*!
    \page creator-connecting-mobile.html
    \previouspage creator-deployment-embedded-linux.html
    \nextpage creator-developing-android.html

    \title Connecting Devices

    You can connect \l{glossary-device}{devices} to the development PC to run, debug,
    and analyze applications built for them from \QC. When you install Qt for a
    target platform, such as Android or QNX,
    the build and run settings for the development targets might be set up
    automatically in \QC.

    You can connect the device to the development PC using a USB connection.
    Additionally, you can connect Linux-based devices by using a WLAN
    connection.

    The experimental WebAssembly plugin enables you to build your applications
    in WebAssembly format, to deploy them, and to run them in a web browser.

    \list

        \li \l{Developing for Android}

            Connect Android devices to the computer to develop Qt applications
            for them.

        \li \l{Developing for Bare Metal Devices}

            You can connect bare metal devices to the development PC and use \QC
            to debug applications on them with GDB or a hardware debugger.

        \li \l{Developing for \B2Q Devices}

            You can connect \B2Q devices to the development PC to run,
            debug, and analyze applications built for them from \QC.

        \li \l {Add Docker images}

            Create Docker devices from Docker images and use them to build, run,
            and debug applications from \QC.

        \li \l{Developing for iOS}

            You use the tools delivered with Xcode to connect devices to \QC.
            \QC detects the tools and configured devices automatically and uses
            the tools to build, deploy, and run applications.

        \li \l{Developing for MCUs}

            You can connect MCU boards to a development host to deploy, run, and
            debug applications on them from \QC.

        \li \l{Add a QNX Neutrino device}

            You can connect QNX devices to the development PC to deploy, run and
            debug applications on them from within \QC. This is currently only
            supported for QNX Neutrino devices, and requires the QNX SDK to be
            installed on the development PC.

        \li \l{Developing for Remote Linux Devices}

            If you have a toolchain for building applications for embedded
            Linux devices installed on the development
            PC, you can add it and the device to \QC.

    \endlist

    \sa {Building Applications for the Web}, {Run in Qt Application Manager}
*/
